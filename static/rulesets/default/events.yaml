---
#event
- id: Init
  trigger: Initialization
  once: true
  actions:
    - id: UpdateVariableLimits
      updates:
        player.learnBoost: [0,100]
        player.healthBoost: [0,100]
        player.gradeBoost: [0,100]
        player.EQBoost: [0,100]
        player.academicIntention: [0,100]
        player.technicIntention: [0,100]
    - id: UpdateVariables
      updates:
        elapsedWeek: 0
        semester: 1
        year: 1
        player.learnBoost: 60
        player.healthBoost: 100
        player.gradeBoost: 60
        player.EQBoost: 60
        player.academicIntention: 0
        player.technicIntention: 0
    - id: SetStatus
      statusId: firstYearOrientation
      on: true

# main loop
- id: GameTick
  trigger: Tick
  actions:
    - id: UpdateVariables
      updates:
        elapsedWeek: elapsedWeek + 1
        week: ((elapsedWeek -1) % 16) + 1
        semester: floor((elapsedWeek - 1)/16) + 1
        year: floor((elapsedWeek - 1)/32) + 1
    - id: TriggerEvents
      triggers:
        - id: WeekBegin

#update attributes every weekBegin
- id: CommonVariableUpdates
  trigger: WeekBegin
  actions:
    - id: UpdateVariables
      updates:
        player.learnBoost: min(max(player.learnBoost + getAttributeValue('player.learnBoost') * 0.01, 0), 100)
        player.healthBoost: min(max(player.healthBoost + getAttributeValue('player.healthBoost') * 0.01, 0), 100)
        player.gradeBoost: min(max(player.gradeBoost + getAttributeValue('player.gradeBoost') * 0.005, 0), 100)
        player.academicIntention: min(max(player.academicIntention + getAttributeValue('player.academicIntention'), 0), 100)
        player.technicIntention: min(max(player.technicIntention + getAttributeValue('player.technicIntention'), 0), 100)



#game beginning
- id: TheBeginning  
  trigger: WeekBegin
  once: true
  actions:
    - id: DisplayMessage
      message: message.beginningCollege
      confirm: message.ok

#choose the goal every week
- id: WeeklyGoal
  trigger: WeekBegin
  actions:
    - id: DisplayChoices
      message: message.weeklyGoal
      confirm: message.ok
      choices:

        - message: message.goalStudy
          confirm: message.ok
          actions:
            - id: DisplayMessage
              message: message.goalStudyResult
              confirm: message.great
            - id: UpdateVariables
              updates:
                player.gradeBoost: player.gradeBoost + 3
                player.learnBoost: player.learnBoost + 2
                player.healthBoost: player.healthBoost + 1
                player.academicIntention: player.academicIntention + 2

        - message: message.goalRest
          confirm: message.ok
          actions:
            - id: DisplayMessage
              message: message.goalRestResult
              confirm: message.cool
            - id: UpdateVariables
              updates:
                player.gradeBoost: player.gradeBoost - 2
                player.learnBoost: player.learnBoost - 2
                player.healthBoost: player.healthBoost +8
                player.EQBoost: player.EQBoost + 3

        - message: message.goalResearch
          confirm: message.ok
          actions:
            - id: DisplayMessage
              message: message.goalResearchResult
              confirm: message.encouraging
            - id: UpdateVariables
              updates:
                player.learnBoost: player.learnBoost + 5
                player.technicIntention: player.technicIntention + 4
                player.academicIntention: player.academicIntention + 3
                player.healthBoost: player.healthBoost - 5
                player.gradeBoost: player.gradeBoost - 2
            - id: Random
              groups:
                - weight: 0.3
                  actions:
                    - id: DisplayMessage
                      message: message.goalResearchBreakthrough
                      confirm: message.excited
                    - id: UpdateVariables
                      updates:
                        player.gradeBoost: player.gradeBoost + 3
                        player.academicIntention: player.academicIntention + 5
                        player.technicIntention: player.technicIntention + 5
                        player.learnBoost: player.learnBoost + 3
            - id: Random
              groups:
                - weight: 0.25
                  actions:
                    - id: DisplayMessage
                      message: message.goalResearchTired
                      confirm: message.excited
                    - id: UpdateVariables
                      updates:
                        player.gradeBoost: player.gradeBoost - 5
                        player.academicIntention: player.academicIntention -3
                        player.technicIntention: player.technicIntention -3
                        player.learnBoost: player.learnBoost - 3
                        player.healthBoost: player.healthBoost - 5
              
        - message: message.goalCrazyPlay
          confirm: message.ok
          actions:
            - id: DisplayMessage
              message: message.goalCrazyPlayResult
              confirm: message.cool
            - id: UpdateVariables
              updates:
                player.healthBoost: player.healthBoost + 5   
                player.gradeBoost: player.gradeBoost - 10      
                player.EQBoost: player.EQBoost + 5             
                player.learnBoost: player.learnBoost - 5
                player.academicIntention: player.academicIntention - 5
                player.technicIntention: player.technicIntention - 5
            - id: Random
              groups:
                - weight: 0.3
                  actions:
                    - id: DisplayMessage
                      message: message.goalCrazyPlayTooMuch
                      confirm: message.unfortunate
                    - id: UpdateVariables
                      updates:
                        player.gradeBoost: player.gradeBoost - 10
                        player.healthBoost: player.healthBoost - 15

#speacial events

- id: MidtermExamComing
  trigger: WeekBegin
  conditions:
    - id: Expression
      expression: week == 8
  actions:
    - id: SetStatus
      statusId: midtermsPressure
      on: true
    - id: DisplayMessage
      message: message.midtermComing
      confirm: message.ok

# week10: MidtermExam
- id: MidtermExam
  trigger: WeekBegin
  conditions:
    - id: Expression
      expression: week == 10
  actions:
    - id: DisplayMessage
      message: message.midterm
      confirm: message.ok

    - id: Switch
      branches:
        - condition: (player.gradeBoost * 0.4 + player.learnBoost * 0.3 + player.academicIntention * 0.2 + player.healthBoost * 0.1) / 10 >= 8
          actions:
            - id: DisplayMessage
              message: message.examExcellent
              confirm: message.great
            - id: UpdateVariables
              updates:
                player.gradeBoost: player.gradeBoost + 12
                player.learnBoost: player.learnBoost + 5
                player.healthBoost: player.healthBoost + 3

        - condition: (player.gradeBoost * 0.4 + player.learnBoost * 0.3 + player.academicIntention * 0.2 + player.healthBoost * 0.1) / 10 >= 6
          actions:
            - id: DisplayMessage
              message: message.examPassed
              confirm: message.ok
            - id: UpdateVariables
              updates:
                player.gradeBoost: player.gradeBoost + 6

        - condition: "true"
          actions:
            - id: DisplayMessage
              message: message.examFailed
              confirm: message.sucks
            - id: UpdateVariables
              updates:
                player.gradeBoost: player.gradeBoost - 8
                player.healthBoost: player.healthBoost - 2

# SummerInternship
- id: SummerInternship
  trigger: WeekBegin
  probability: 0.3
  conditions:
    - id: Expression
      expression: week >= 12 && semester % 2 == 0 && !hasStatus('summerInternship')
  actions:
    - id: SetStatus
      statusId: summerInternship
      on: true
    - id: DisplayChoices
      message: message.summerEvent
      confirm: message.ok
      choices:
        
        - message: message.choiceInternship
          confirm: message.ok
          actions:
            # 计算成功概率（属性70% + 运气30%）

            - id: Switch
              branches:
                #success
                - condition: (player.technicIntention * 0.5 + player.learnBoost * 0.5 + player.EQBoost*0.1 + player.academicIntention*0.1 ) >= 75
                  probability: 0.75
                  actions:
                    - id: DisplayMessage
                      message: message.internshipSuccess
                      confirm: message.great
                    - id: UpdateVariables
                      updates:
                        player.technicIntention: player.technicIntention + 8
                        player.healthBoost: player.healthBoost - 5
                        player.EQBoost: player.EQBoost + 3
                    - id: SetStatus
                      statusId: successInternship
                      on: true
                # fail
                - condition: "true"
                  actions:
                    - id: DisplayMessage
                      message: message.internshipFailed
                      confirm: message.sucks
                    - id: UpdateVariables
                      updates:
                        player.technicIntention: player.technicIntention + 2
                        player.healthBoost: player.healthBoost - 3
                    - id: SetStatus
                      statusId: failInternship
                      on: true

        - message: message.choiceResearch
          confirm: message.ok
          actions:
            - id: Switch
              branches:
                # +
                - condition: (player.academicIntention * 0.5 + player.learnBoost * 0.5 + player.EQBoost*0.1 + player.technicIntention*0.1 )  >= 75
                  probability: 0.75
                  actions:
                    - id: DisplayMessage
                      message: message.researchSuccess
                      confirm: message.great
                    - id: UpdateVariables
                      updates:
                        player.academicIntention: player.academicIntention + 8
                        player.gradeBoost: player.gradeBoost + 5
                        player.healthBoost: player.healthBoost - 5
                    - id: SetStatus
                      statusId: successResearch
                      on: true
                # fail
                - condition: "true"
                  actions:
                    - id: DisplayMessage
                      message: message.researchFailed
                      confirm: message.sucks
                    - id: UpdateVariables
                      updates:
                        player.academicIntention: player.academicIntention + 2
                        player.healthBoost: player.healthBoost - 3
                    - id: SetStatus
                      statusId: failResearch
                      on: true

# lyingflat bounceback
# - id: BounceBack
#   trigger: WeekBegin
#   probability: 0.2
#   conditions:
#     - id: Expression
#       expression: hasStatus('rest') && player.healthBoost > 80
#   actions:
#     - id: DisplayMessage
#       message: message.bounceBack
#       confirm: message.encouraging
#     - id: UpdateVariables
#       updates:
#         player.learnBoost: player.learnBoost + 8
#         player.gradeBoost: player.gradeBoost + 3

# high pressure and tired
- id: Burnout
  trigger: WeekBegin
  probability: 0.15
  conditions:
    - id: Expression
      expression: player.learnBoost > 80 && player.healthBoost < 40
  actions:
    - id: DisplayMessage
      message: message.burnout
      confirm: message.sad
    - id: SetStatus
      statusId: burnout
      on: true
    - id: UpdateVariables
      updates:
        player.learnBoost: player.learnBoost - 10
        player.healthBoost: player.healthBoost - 10

# game end:      
# - id: EndReport
#   trigger: GameEnd
#   actions:
#     - id: DisplayMessage
#       message: message.endReport
#       confirm: message.ok
#     - id: AIGenerateReport
#       prompt: |
#         请根据以下玩家数据生成一份中文报告：
#         - 学业成绩：{{ player.academic }}
#         - 健康状态：{{ player.health }}
#         - 社交活跃：{{ player.social }}
#         - 科研投入：{{ player.research }}
#         - 玩乐次数：{{ player.playCount }}
#         - 实习经历：{{ player.internship }}
#         要求写一段150字左右的《大学四年总结报告》，
#         内容包括总体表现、性格特征、大学生活亮点和未来展望。
#     - id: DisplayAIResult
#       label: "你的大学总结报告如下："

- id: GameEnd
  trigger: WeekBegin
  condition: 
    - id: Expression
      expression: week > 32   
  actions:
    - id: DisplayMessage
      message: message.end
      confirm: message.ok
    # - id: TriggerEvent
      # eventId: EndReport

# llm example
- id: chat.with.professor
  trigger: WeekBegin
  conditions:
    - id: Expression
      expression: week == 1
  actions:
    - id: EANPCChat
      npcId: 1
      prompt: "你对林教授说："
      npcName: "林教授"